{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","className","Navbar","props","colorMode","to","type","id","onChange","setColorMode","document","body","style","htmlFor","TextForm","text","setText","textColor","heading","value","event","target","rows","onClick","temp","split","str","i","length","charAt","toUpperCase","substr","toLowerCase","newText","map","currentValue","slice","join","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de5077bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n\tconst [myStyle, setMyStyle] = useState({\r\n\t\tcolor: \"white\",\r\n\t\tbackgroundColor: \"black\",\r\n\t});\r\n\r\n\tconst [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\tconst toggleStyle = () => {\r\n\t\tif (myStyle.color === \"white\") {\r\n\t\t\tsetMyStyle({\r\n\t\t\t\tcolor: \"black\",\r\n\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t});\r\n\t\t\tsetBtnText(\"Enable Light Mode\");\r\n\t\t} else {\r\n\t\t\tsetMyStyle({\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\tbackgroundColor: \"black\",\r\n\t\t\t});\r\n\t\t\tsetBtnText(\"Enable Dark Mode\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<p className=\"fs-3 my-4\">\r\n\t\t\t\t\tThis Web app gives you feature to do some operation on text very easily.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\tconst toggleMode = () => {\r\n\t\tif (props.colorMode === \"dark\") {\r\n\t\t\tprops.setColorMode(\"light\");\r\n\t\t\tdocument.body.style.backgroundColor = \"white\";\r\n\t\t} else {\r\n\t\t\tprops.setColorMode(\"dark\");\r\n\t\t\tdocument.body.style.backgroundColor = \"#1b2b57\";\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.colorMode} bg-${props.colorMode}`}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">\r\n\t\t\t\t\tTextUtils\r\n\t\t\t\t</Link>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-bs-toggle=\"collapse\"\r\n\t\t\t\t\tdata-bs-target=\"/navbarSupportedContent\"\r\n\t\t\t\t\taria-controls=\"navbarSupportedContent\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/about\">\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className=\"form-check form-switch\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"form-check-input\"\r\n\t\t\t\t\t\t\tonChange={toggleMode}\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tid=\"flexSwitchCheckDefault\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tclassName={`form-check-label text-${props.colorMode === \"dark\" ? \"light\" : \"dark\"}`}\r\n\t\t\t\t\t\t\thtmlFor=\"flexSwitchCheckDefault\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"bi bi-moon-stars-fill mx-2\"></i>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\tconst handleNormal = () => {\r\n\t\tlet temp = text.split(\". \");\r\n\t\tlet str = \"\";\r\n\t\tfor (let i = 0; i < temp.length; i++) {\r\n\t\t\tif (i !== 0) str += \". \";\r\n\t\t\tstr += temp[i].charAt(0).toUpperCase() + temp[i].substr(1).toLowerCase();\r\n\t\t}\r\n\t\tsetText(str);\r\n\t};\r\n\tconst handleUpClick = () => {\r\n\t\tsetText(text.toUpperCase());\r\n\t};\r\n\tconst handleLoClick = () => {\r\n\t\tsetText(text.toLowerCase());\r\n\t};\r\n\tconst handleOnChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\tconst handleReverse = (event) => {\r\n\t\tlet temp = \"\";\r\n\t\tfor (let i = text.length - 1; i >= 0; i--) {\r\n\t\t\ttemp += text.charAt(i);\r\n\t\t}\r\n\t\tsetText(temp);\r\n\t};\r\n\tconst handleCapitalize = () => {\r\n\t\tlet newText = text.split(\" \").map((currentValue) => {\r\n\t\t\tlet newText = currentValue[0].toUpperCase() + currentValue.slice(1);\r\n\t\t\treturn newText;\r\n\t\t});\r\n\t\tsetText(newText.join(\" \"));\r\n\t};\r\n\tconst [text, setText] = useState(\"Enter text here\");\r\n\tlet textColor = props.colorMode === \"dark\" ? \"light\" : \"dark\";\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={`container my-3 text-${textColor}`}>\r\n\t\t\t\t<h1>{props.heading}</h1>\r\n\t\t\t\t<div className=\"my-3\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName={`form-control text-${textColor}`}\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\tid=\"Textbox\"\r\n\t\t\t\t\t\trows=\"8\"\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn-primary mx-1\" onClick={handleNormal}>\r\n\t\t\t\t\tNormal\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n\t\t\t\t\tConvert to uppercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n\t\t\t\t\tConvert to lowercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-1\" onClick={handleReverse}>\r\n\t\t\t\t\tConvert to Reverse\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-1\" onClick={handleCapitalize}>\r\n\t\t\t\t\tCapitalize\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={`container my-3 text-${textColor}`}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWords = {text.split(\" \").length}, Character = {text.length}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n\tconst [colorMode, setColorMode] = useState(\"light\");\n\treturn (\n\t\t<>\n\t\t\t<Router>\n\t\t\t\t<Navbar colorMode={colorMode} setColorMode={setColorMode} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/about\">\n\t\t\t\t\t\t<About />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<TextForm heading=\"Enter your Text to Analyse\" colorMode={colorMode} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/textutils\">\n\t\t\t\t\t\t<TextForm heading=\"Enter your Text to Analyse\" colorMode={colorMode} />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}